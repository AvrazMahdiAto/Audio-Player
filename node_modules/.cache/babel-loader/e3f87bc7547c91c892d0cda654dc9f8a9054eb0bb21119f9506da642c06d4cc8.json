{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/react-audio-player/src/components/ProgressBar.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressBar = _ref => {\n  let {\n    progressBarRef,\n    audioRef,\n    timeProgress,\n    duration\n  } = _ref;\n  const handleProgressChange = () => {\n    audioRef.current.currentTime = progressBarRef.current.value;\n  };\n  const formatTime = time => {\n    if (time && !isNaN(time)) {\n      const minutes = Math.floor(time / 60);\n      const formatMinutes = minutes < 10 ? `0${minutes}` : `${minutes}`;\n      const seconds = Math.floor(time % 60);\n      const formatSeconds = seconds < 10 ? `0${seconds}` : `${seconds}`;\n      return `${formatMinutes}:${formatSeconds}`;\n    }\n    return '00:00';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"progress\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"time current\",\n      children: formatTime(timeProgress)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      ref: progressBarRef,\n      defaultValue: \"0\",\n      onChange: handleProgressChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"time\",\n      children: formatTime(duration)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = ProgressBar;\nexport default ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["ProgressBar","progressBarRef","audioRef","timeProgress","duration","handleProgressChange","current","currentTime","value","formatTime","time","isNaN","minutes","Math","floor","formatMinutes","seconds","formatSeconds"],"sources":["/home/user/Desktop/react-audio-player/src/components/ProgressBar.jsx"],"sourcesContent":["const ProgressBar = ({\n  progressBarRef,\n  audioRef,\n  timeProgress,\n  duration,\n}) => {\n  const handleProgressChange = () => {\n    audioRef.current.currentTime = progressBarRef.current.value;\n  };\n\n  const formatTime = (time) => {\n    if (time && !isNaN(time)) {\n      const minutes = Math.floor(time / 60);\n      const formatMinutes =\n        minutes < 10 ? `0${minutes}` : `${minutes}`;\n      const seconds = Math.floor(time % 60);\n      const formatSeconds =\n        seconds < 10 ? `0${seconds}` : `${seconds}`;\n      return `${formatMinutes}:${formatSeconds}`;\n    }\n    return '00:00';\n  };\n\n  return (\n    <div className=\"progress\">\n      <span className=\"time current\">{formatTime(timeProgress)}</span>\n      <input\n        type=\"range\"\n        ref={progressBarRef}\n        defaultValue=\"0\"\n        onChange={handleProgressChange}\n      />\n      <span className=\"time\">{formatTime(duration)}</span>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n"],"mappings":";;AAAA,MAAMA,WAAW,GAAG,QAKd;EAAA,IALe;IACnBC,cAAc;IACdC,QAAQ;IACRC,YAAY;IACZC;EACF,CAAC;EACC,MAAMC,oBAAoB,GAAG,MAAM;IACjCH,QAAQ,CAACI,OAAO,CAACC,WAAW,GAAGN,cAAc,CAACK,OAAO,CAACE,KAAK;EAC7D,CAAC;EAED,MAAMC,UAAU,GAAIC,IAAI,IAAK;IAC3B,IAAIA,IAAI,IAAI,CAACC,KAAK,CAACD,IAAI,CAAC,EAAE;MACxB,MAAME,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACJ,IAAI,GAAG,EAAE,CAAC;MACrC,MAAMK,aAAa,GACjBH,OAAO,GAAG,EAAE,GAAI,IAAGA,OAAQ,EAAC,GAAI,GAAEA,OAAQ,EAAC;MAC7C,MAAMI,OAAO,GAAGH,IAAI,CAACC,KAAK,CAACJ,IAAI,GAAG,EAAE,CAAC;MACrC,MAAMO,aAAa,GACjBD,OAAO,GAAG,EAAE,GAAI,IAAGA,OAAQ,EAAC,GAAI,GAAEA,OAAQ,EAAC;MAC7C,OAAQ,GAAED,aAAc,IAAGE,aAAc,EAAC;IAC5C;IACA,OAAO,OAAO;EAChB,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,UAAU;IAAA,wBACvB;MAAM,SAAS,EAAC,cAAc;MAAA,UAAER,UAAU,CAACN,YAAY;IAAC;MAAA;MAAA;MAAA;IAAA,QAAQ,eAChE;MACE,IAAI,EAAC,OAAO;MACZ,GAAG,EAAEF,cAAe;MACpB,YAAY,EAAC,GAAG;MAChB,QAAQ,EAAEI;IAAqB;MAAA;MAAA;MAAA;IAAA,QAC/B,eACF;MAAM,SAAS,EAAC,MAAM;MAAA,UAAEI,UAAU,CAACL,QAAQ;IAAC;MAAA;MAAA;MAAA;IAAA,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,QAChD;AAEV,CAAC;AAAC,KAnCIJ,WAAW;AAqCjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}