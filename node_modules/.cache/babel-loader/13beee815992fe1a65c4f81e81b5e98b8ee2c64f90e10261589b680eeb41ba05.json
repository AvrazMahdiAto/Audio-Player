{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Audio-Player/src/components/Controls.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef, useCallback } from \"react\";\n\n// icons\nimport { IoPlayBackSharp, IoPlayForwardSharp, IoPlaySkipBackSharp, IoPlaySkipForwardSharp, IoPlaySharp, IoPauseSharp } from \"react-icons/io5\";\nimport { IoMdVolumeHigh, IoMdVolumeOff, IoMdVolumeLow } from \"react-icons/io\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Controls = _ref => {\n  _s();\n  let {\n    tracks,\n    trackIndex,\n    setTrackIndex,\n    currentTrack,\n    setCurrentTrack,\n    isPlaying,\n    togglePlayPause,\n    handleNext,\n    audioRef,\n    progressBarRef,\n    volume,\n    setVolume,\n    muteVolume,\n    setMuteVolume,\n    Dauer\n  } = _ref;\n  const [Zeitfortschritt, setZeitfortschritt] = useState(0);\n  const playAnimationRef = useRef();\n  const repeat = useCallback(() => {\n    const currentTime = audioRef.current.currentTime;\n    setZeitfortschritt(currentTime);\n    progressBarRef.current.value = currentTime;\n    progressBarRef.current.style.setProperty(\"--range-progress\", `${progressBarRef.current.value / Dauer * 100}%`);\n    playAnimationRef.current = requestAnimationFrame(repeat);\n  }, [audioRef, Dauer, progressBarRef, setZeitfortschritt]);\n  useEffect(() => {\n    if (isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n    playAnimationRef.current = requestAnimationFrame(repeat);\n  }, [isPlaying, audioRef, repeat]);\n  const skipForward = () => {\n    audioRef.current.currentTime += 15;\n  };\n  const skipBackward = () => {\n    audioRef.current.currentTime -= 15;\n  };\n  const handlePrevious = () => {\n    if (trackIndex === 0) {\n      let lastTrackIndex = tracks.length - 1;\n      setTrackIndex(lastTrackIndex);\n      setCurrentTrack(tracks[lastTrackIndex]);\n    } else {\n      setTrackIndex(prev => prev - 1);\n      setCurrentTrack(tracks[trackIndex - 1]);\n    }\n  };\n  useEffect(() => {\n    if (audioRef) {\n      audioRef.current.volume = volume / 100;\n      audioRef.current.muted = muteVolume;\n    }\n  }, [volume, audioRef, muteVolume]);\n  const formatTime = time => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60).toString().padStart(2, \"0\");\n    return `${minutes}:${seconds}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"controls-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrevious,\n        children: /*#__PURE__*/_jsxDEV(IoPlaySkipBackSharp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: skipBackward,\n        children: /*#__PURE__*/_jsxDEV(IoPlayBackSharp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePlayPause,\n        children: isPlaying ? /*#__PURE__*/_jsxDEV(IoPauseSharp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(IoPlaySharp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: skipForward,\n        children: /*#__PURE__*/_jsxDEV(IoPlayForwardSharp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        children: /*#__PURE__*/_jsxDEV(IoPlaySkipForwardSharp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: formatTime(Zeitfortschritt)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: 0,\n        max: Dauer,\n        value: Zeitfortschritt,\n        ref: progressBarRef,\n        onChange: e => {\n          audioRef.current.currentTime = e.target.value;\n          setZeitfortschritt(e.target.value);\n        },\n        style: {\n          background: `linear-gradient(to right, #f50 ${Zeitfortschritt / Dauer * 100}%, #ccc ${Zeitfortschritt / Dauer * 100}%);`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(Controls, \"J6Zm2z7BEbTw9VCNqUfBjfsxr48=\");\n_c = Controls;\nexport default Controls;\nvar _c;\n$RefreshReg$(_c, \"Controls\");","map":{"version":3,"names":["useState","useEffect","useRef","useCallback","IoPlayBackSharp","IoPlayForwardSharp","IoPlaySkipBackSharp","IoPlaySkipForwardSharp","IoPlaySharp","IoPauseSharp","IoMdVolumeHigh","IoMdVolumeOff","IoMdVolumeLow","Controls","tracks","trackIndex","setTrackIndex","currentTrack","setCurrentTrack","isPlaying","togglePlayPause","handleNext","audioRef","progressBarRef","volume","setVolume","muteVolume","setMuteVolume","Dauer","Zeitfortschritt","setZeitfortschritt","playAnimationRef","repeat","currentTime","current","value","style","setProperty","requestAnimationFrame","play","pause","skipForward","skipBackward","handlePrevious","lastTrackIndex","length","prev","muted","formatTime","time","minutes","Math","floor","seconds","toString","padStart","e","target","background"],"sources":["/home/user/Desktop/Audio-Player/src/components/Controls.jsx"],"sourcesContent":["import { useState, useEffect, useRef, useCallback } from \"react\";\n\n// icons\nimport {\n  IoPlayBackSharp,\n  IoPlayForwardSharp,\n  IoPlaySkipBackSharp,\n  IoPlaySkipForwardSharp,\n  IoPlaySharp,\n  IoPauseSharp,\n} from \"react-icons/io5\";\n\nimport { IoMdVolumeHigh, IoMdVolumeOff, IoMdVolumeLow } from \"react-icons/io\";\n\nconst Controls = ({\n  tracks,\n  trackIndex,\n  setTrackIndex,\n  currentTrack,\n  setCurrentTrack,\n  isPlaying,\n  togglePlayPause,\n  handleNext,\n  audioRef,\n  progressBarRef,\n  volume,\n  setVolume,\n  muteVolume,\n  setMuteVolume,\n  Dauer,\n}) => {\n  const [Zeitfortschritt, setZeitfortschritt] = useState(0);\n\n  const playAnimationRef = useRef();\n\n  const repeat = useCallback(() => {\n    const currentTime = audioRef.current.currentTime;\n    setZeitfortschritt(currentTime);\n    progressBarRef.current.value = currentTime;\n    progressBarRef.current.style.setProperty(\n      \"--range-progress\",\n      `${(progressBarRef.current.value / Dauer) * 100}%`\n    );\n\n    playAnimationRef.current = requestAnimationFrame(repeat);\n  }, [audioRef, Dauer, progressBarRef, setZeitfortschritt]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n    playAnimationRef.current = requestAnimationFrame(repeat);\n  }, [isPlaying, audioRef, repeat]);\n\n  const skipForward = () => {\n    audioRef.current.currentTime += 15;\n  };\n\n  const skipBackward = () => {\n    audioRef.current.currentTime -= 15;\n  };\n\n  const handlePrevious = () => {\n    if (trackIndex === 0) {\n      let lastTrackIndex = tracks.length - 1;\n      setTrackIndex(lastTrackIndex);\n      setCurrentTrack(tracks[lastTrackIndex]);\n    } else {\n      setTrackIndex((prev) => prev - 1);\n      setCurrentTrack(tracks[trackIndex - 1]);\n    }\n  };\n\n  useEffect(() => {\n    if (audioRef) {\n      audioRef.current.volume = volume / 100;\n      audioRef.current.muted = muteVolume;\n    }\n  }, [volume, audioRef, muteVolume]);\n\n  const formatTime = (time) => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60)\n      .toString()\n      .padStart(2, \"0\");\n    return `${minutes}:${seconds}`;\n  };\n\n  return (\n    <div className=\"controls-wrapper\">\n      <div className=\"controls\">\n        <button onClick={handlePrevious}>\n          <IoPlaySkipBackSharp />\n        </button>\n        <button onClick={skipBackward}>\n          <IoPlayBackSharp />\n        </button>\n\n        <button onClick={togglePlayPause}>\n          {isPlaying ? <IoPauseSharp /> : <IoPlaySharp />}\n        </button>\n        <button onClick={skipForward}>\n          <IoPlayForwardSharp />\n        </button>\n        <button onClick={handleNext}>\n          <IoPlaySkipForwardSharp />\n        </button>\n      </div>\n      <div className=\"progress\">\n        <span>{formatTime(Zeitfortschritt)}</span>\n        <input\n          type=\"range\"\n          min={0}\n          max={Dauer}\n          value={Zeitfortschritt}\n          ref={progressBarRef}\n          onChange={(e) => {\n            audioRef.current.currentTime = e.target.value;\n            setZeitfortschritt(e.target.value);\n          }}\n          style={{\n            background: `linear-gradient(to right, #f50 ${\n              (Zeitfortschritt / Dauer) * 100\n            }%, #ccc ${(Zeitfortschritt / Dauer) * 100}%);`,\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Controls;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}